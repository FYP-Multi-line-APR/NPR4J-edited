package VAR_1 . event ; import VAR_2 ; import VAR_3 ; import VAR_4 ; import VAR_5 ; import VAR_6 ; import VAR_7 ; import VAR_8 ; import VAR_9 . EventType ; public class VAR_10 { private final TYPE_1 < TYPE_2 , TYPE_3 < EventType > > eventHandler ; public VAR_10 ( ) { this . eventHandler = new TYPE_4 < > ( ) ; } public void METHOD_1 ( TYPE_2 eventListener , EventType VAR_11 ) { if ( eventHandler . METHOD_2 ( eventListener ) ) { eventHandler . METHOD_3 ( eventListener ) . add ( VAR_11 ) ; } else { final TYPE_3 < TYPE_5 . EventType > VAR_12 = new TYPE_6 < > ( EventType . METHOD_4 ( ) . VAR_13 ) ; VAR_12 . add ( VAR_11 ) ; this . eventHandler . METHOD_5 ( eventListener , VAR_12 ) ; } } public void METHOD_6 ( TYPE_2 eventListener , EventType VAR_11 ) { if ( eventHandler . METHOD_2 ( eventListener ) ) { final TYPE_3 < EventType > VAR_12 = eventHandler . METHOD_3 ( eventListener ) ; if ( VAR_12 . METHOD_7 ( ) == INT_1 ) { eventHandler . METHOD_8 ( eventListener ) ; } else { VAR_12 . METHOD_8 ( VAR_11 ) ; } } } public boolean METHOD_9 ( TYPE_2 eventListener , EventType VAR_14 ) { return eventHandler . METHOD_2 ( eventListener ) && eventHandler . METHOD_3 ( eventListener ) . METHOD_10 ( VAR_14 ) ; } public void METHOD_11 ( TYPE_5 event , TYPE_7 ... VAR_15 ) { for ( TYPE_8 < TYPE_2 , TYPE_3 < EventType > > VAR_16 : eventHandler . METHOD_12 ( ) ) { final TYPE_2 eventListener = VAR_16 . METHOD_13 ( ) ; final boolean VAR_17 = VAR_16 . METHOD_14 ( ) . METHOD_10 ( event . METHOD_15 ( ) ) ; if ( ! METHOD_16 ( eventListener , event , VAR_15 ) && VAR_17 ) { eventListener . METHOD_17 ( event , VAR_15 ) ; } } } private boolean METHOD_16 ( final TYPE_2 VAR_18 , final TYPE_5 event , final TYPE_7 ... VAR_19 ) { for ( final TYPE_9 VAR_20 : VAR_18 . METHOD_18 ( ) . METHOD_19 ( ) ) { if ( VAR_20 . METHOD_20 ( VAR_21 class ) && VAR_20 . METHOD_21 ( VAR_21 class ) . METHOD_22 ( ) == event ) { try { VAR_20 . METHOD_23 ( VAR_18 , VAR_19 ) ; return true ; } catch ( TYPE_10 | TYPE_11 | TYPE_12 VAR_22 ) { VAR_23 . METHOD_24 ( METHOD_18 ( ) . METHOD_25 ( ) , STRING_1 + VAR_22 . METHOD_18 ( ) . METHOD_25 ( ) + STRING_2 + VAR_22 . METHOD_26 ( ) , VAR_22 ) ; } } } return false ; } }